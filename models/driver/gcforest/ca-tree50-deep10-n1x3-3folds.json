//Description: A python 2.7 implementation of gcForest proposed in [1]. A demo implementation of gcForest library as well as some demo client scripts to demostrate how to use the code. The implementation is flexible enough for modifying the model or
//fit your own datasets. 
//Reference: [1] Z.-H. Zhou and J. Feng. Deep Forest: Towards an Alternative to Deep Neural Networks. In IJCAI-2017.  (https://arxiv.org/abs/1702.08835v2 )
//Requirements: This package is developed with Python 2.7, please make sure all the demendencies are installed, which is specified in requirements.txt
//ATTN: This package is free for academic usage. You can run it at your own risk. For other purposes, please contact Prof. Zhi-Hua Zhou(zhouzh@lamda.nju.edu.cn)
//ATTN2: This package was developed by Mr.Ji Feng(fengj@lamda.nju.edu.cn). The readme file and demo roughly explains how to use the codes. For any problem concerning the codes, please feel free to contact Mr.Feng. 

{
"dataset": {
    "train": {"type": "driver", "data_set": "train", "layout_x": "vector"},
    "test": {"type": "driver", "data_set": "test", "layout_x": "vector"}
},
"cascade": {
    "data_save_dir": "/mnt/raid/fengji/gcforest/driver/ca-tree50-deep10-n1x3-3folds/",
    "random_state": 0,
    "early_stopping_rounds": 5,
    "n_classes": 2,
    "metrics": "nor_gini",
    "estimators": [
        {"n_folds":3,"type":"ExtraTreesClassifier","n_estimators":50,"max_depth":10,"n_jobs":-1,"oob_score":"True","bootstrap":"True","max_features":1},
        {"n_folds":3,"type":"GradientBoostingClassifier","n_estimators":50,"max_depth":10,"loss":"exponential","learning_rate":0.01,"warm_start":"True"},
        {"n_folds":3,"type":"RandomForestClassifier","n_estimators":50,"max_depth":10,"oob_score":"True","bootstrap":"True","n_jobs":-1}
    ]
}
}
